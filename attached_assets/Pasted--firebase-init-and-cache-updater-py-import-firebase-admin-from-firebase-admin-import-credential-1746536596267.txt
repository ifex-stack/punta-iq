# firebase_init_and_cache_updater.py

import firebase_admin
from firebase_admin import credentials, db
import requests
import datetime
import time

# === Firebase Initialization ===
cred = credentials.Certificate("serviceAccountKey.json")  # Replace with your actual service account key path
firebase_admin.initialize_app(cred, {
    'databaseURL': 'https://<your-project-id>.firebaseio.com'  # Replace with your Firebase DB URL
})

# === API Configuration ===
API_FOOTBALL_KEY = "your_api_football_key"
API_BASE_URL = "https://v3.football.api-sports.io/fixtures"
HEADERS = {
    "x-apisports-key": API_FOOTBALL_KEY
}

def fetch_today_football_fixtures():
    today = datetime.date.today().strftime("%Y-%m-%d")
    params = {
        "date": today,
        "league": "39",  # English Premier League for example
        "season": "2024"
    }
    response = requests.get(API_BASE_URL, headers=HEADERS, params=params)
    if response.status_code == 200:
        return response.json().get("response", [])
    else:
        print("API Error:", response.text)
        return []

def cache_fixtures_to_firebase(fixtures):
    today = datetime.date.today().strftime("%Y-%m-%d")
    ref = db.reference(f"/sports/football/fixtures/{today}")
    data_to_store = {}
    for idx, match in enumerate(fixtures):
        match_id = f"match_{idx+1}"
        fixture_info = match.get("fixture", {})
        teams = match.get("teams", {})
        league = match.get("league", {})
        data_to_store[match_id] = {
            "home_team": teams.get("home", {}).get("name"),
            "away_team": teams.get("away", {}).get("name"),
            "kickoff": fixture_info.get("date"),
            "league": league.get("name"),
            "status": fixture_info.get("status", {}).get("short")
        }
    ref.set(data_to_store)
    print(f"Cached {len(fixtures)} fixtures to Firebase.")

# === Scheduler/Cron Job Logic ===
def run_cache_update():
    print("Running cache update...")
    fixtures = fetch_today_football_fixtures()
    if fixtures:
        cache_fixtures_to_firebase(fixtures)

# Run once if manually called
if __name__ == "__main__":
    run_cache_update()
